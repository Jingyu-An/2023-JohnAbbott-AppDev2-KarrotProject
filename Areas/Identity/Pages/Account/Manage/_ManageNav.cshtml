@inject SignInManager<IdentityUser> SignInManager

@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column w-50 text-center">
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.IndexNavClass(ViewContext) text-color" id="profile"
           asp-page="./Index" style="text-decoration: none;">
            <strong>Profile</strong>
        </a>
    </li>
    <li class="nav-item ">
        <a class="nav-link @ManageNavPages.EmailNavClass(ViewContext) text-color" id="email"
           asp-page="./Email">
            <strong>Email</strong>
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext) text-color"
           id="change-password" asp-page="./ChangePassword">
            <strong>Password</strong>
        </a>
    </li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item">
            <a id="external-login"
               class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">
                External
                logins
            </a>
        </li>
    }
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.PageNavClass(ViewContext, "address") text-color"
           id="address" asp-page="./Address">
            <strong>Address</strong>
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.PageNavClass(ViewContext, "products") text-color"
           id="products" asp-page="./Products">
            <strong>Products</strong>
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @ManageNavPages.PageNavClass(ViewContext, "comments") text-color"
           id="comments" asp-page="./Comments">
            <strong>Comments</strong>
        </a>
    </li>
</ul>